// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ShareController (e2e) / (GET) negative should cater for dateFrom after dateTo 1`] = `
{
  "error": "Bad Request",
  "message": [
    "dateFrom must come before dateTo",
  ],
  "statusCode": 400,
}
`;

exports[`ShareController (e2e) / (GET) negative should cater for dateFrom and dateTo not in correct date format 1`] = `
{
  "error": "Bad Request",
  "message": [
    "dateFrom must be a valid ISO 8601 date string",
    "dateFrom and dateTo max-range is 6 months",
    "dateFrom must come before dateTo",
    "dateTo must be a valid ISO 8601 date string",
  ],
  "statusCode": 400,
}
`;

exports[`ShareController (e2e) / (GET) negative should cater for max date-range 1`] = `
{
  "error": "Bad Request",
  "message": [
    "dateFrom and dateTo max-range is 6 months",
  ],
  "statusCode": 400,
}
`;

exports[`ShareController (e2e) / (GET) negative should cater for missing query parameters 1`] = `
{
  "error": "Bad Request",
  "message": [
    "link must be a UUID",
    "link must be a string",
    "link must be shorter than or equal to 36 characters",
    "link must be longer than or equal to 36 characters",
    "link should not be empty",
    "dateFrom must be a valid ISO 8601 date string",
    "dateFrom should not be empty",
    "dateFrom and dateTo max-range is 6 months",
    "dateFrom must come before dateTo",
    "dateTo must be a valid ISO 8601 date string",
    "dateTo should not be empty",
  ],
  "statusCode": 400,
}
`;

exports[`ShareController (e2e) / (GET) negative should cater for sharelink not found 1`] = `
{
  "error": "Internal Server Error",
  "message": "Share page with link: d9e28047-0ad5-4898-964d-7079f7a4a0ed does not exist",
  "statusCode": 500,
}
`;

exports[`ShareController (e2e) / (GET) positive should return share-summary 1`] = `
{
  "data": {
    "2023-04-22T00:00:00.000Z": {
      "alcohol": 0,
      "breakfast": [
        "1 cup - breakfast food 2 (description of food)",
      ],
      "dinner": [
        "half bowl - dinner food 1",
      ],
      "lunch": [],
      "snack_1": [],
      "snack_2": [],
      "tea_coffee": 0,
      "water": 2,
    },
    "2023-04-25T00:00:00.000Z": {
      "alcohol": 0,
      "breakfast": [
        "1 cup - breakfast food 2 (description of food)",
      ],
      "dinner": [
        "half bowl - dinner food 1",
      ],
      "lunch": [
        "lunch food 1",
        "lunch food 2 (Nice and long destription about this meal that is wonderful to read)",
      ],
      "snack_1": [],
      "snack_2": [],
      "tea_coffee": 0,
      "water": 4,
    },
    "2023-04-27T00:00:00.000Z": {
      "alcohol": 1,
      "breakfast": [
        "breakfast food 1",
        "1 cup - breakfast food 2 (description of food)",
      ],
      "dinner": [
        "half bowl - dinner food 1",
        "plate - longer dinner food 2",
        "1/2 - dinner food 3",
        "2 - dinner food 4",
      ],
      "lunch": [
        "lunch food 1",
        "lunch food 2 (Nice and long destription about this meal that is wonderful to read)",
        "4 - lunch food 3",
      ],
      "snack_1": [
        "snack 1 food",
      ],
      "snack_2": [
        "snack 2 food",
      ],
      "tea_coffee": 2,
      "water": 4,
    },
  },
  "dates": [
    "2023-04-22T00:00:00.000Z",
    "2023-04-23T00:00:00.000Z",
    "2023-04-24T00:00:00.000Z",
    "2023-04-25T00:00:00.000Z",
    "2023-04-26T00:00:00.000Z",
    "2023-04-27T00:00:00.000Z",
  ],
  "totalDays": 6,
  "user": "Mock Name",
}
`;

exports[`ShareController (e2e) / (GET) positive should return share-summary if diary-days are empty 1`] = `
{
  "data": {},
  "dates": [
    "2023-04-22T00:00:00.000Z",
    "2023-04-23T00:00:00.000Z",
    "2023-04-24T00:00:00.000Z",
    "2023-04-25T00:00:00.000Z",
    "2023-04-26T00:00:00.000Z",
    "2023-04-27T00:00:00.000Z",
  ],
  "totalDays": 6,
  "user": "Mock Name",
}
`;

exports[`ShareController (e2e) /generate-link (PUT) negative should cater for link update error 1`] = `
{
  "error": "Internal Server Error",
  "message": "There is a unique constraint violation, a new ShareLink cannot be created with this userid",
  "statusCode": 500,
}
`;

exports[`ShareController (e2e) /generate-link (PUT) negative should not allow non-logged in users 1`] = `
{
  "message": "Unauthorized",
  "statusCode": 401,
}
`;

exports[`ShareController (e2e) /generate-link (PUT) positive should generate a new share-link and return 1`] = `
{
  "shareLink": "mock_guid",
}
`;

exports[`ShareController (e2e) /link-shareable (PUT) negative should cater for empty body 1`] = `
{
  "error": "Bad Request",
  "message": [
    "isShared should not be empty",
    "isShared must be a boolean value",
  ],
  "statusCode": 400,
}
`;

exports[`ShareController (e2e) /link-shareable (PUT) negative should cater for isShared flag wrong format 1`] = `
{
  "error": "Bad Request",
  "message": [
    "isShared must be a boolean value",
  ],
  "statusCode": 400,
}
`;

exports[`ShareController (e2e) /link-shareable (PUT) negative should not allow non-logged in users 1`] = `
{
  "message": "Unauthorized",
  "statusCode": 401,
}
`;

exports[`ShareController (e2e) /link-shareable (PUT) positive should update link-shareanble state 1`] = `{}`;
